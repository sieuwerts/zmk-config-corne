/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // mouse movement speed, default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 12    // mouse scroll speed, default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_gaming_toggle {
            bindings = <&tog 4>;
            key-positions = <35 34 33>;
            layers = <0 4>;
            require-prior-idle-ms = <150>;
        };

        combo_bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <39 41>;
            layers = <1>;
            require-prior-idle-ms = <150>;
        };

        combo_exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 2>;
            layers = <0>;
            require-prior-idle-ms = <150>;
        };

        combo_at {
            bindings = <&kp AT_SIGN>;
            key-positions = <2 3>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };

        combo_hash {
            bindings = <&kp HASH>;
            key-positions = <3 4>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };

        combo_dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <5 4>;
            layers = <0>;
            require-prior-idle-ms = <150>;
        };

        combo_percent {
            bindings = <&kp PERCENT>;
            key-positions = <13 14>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };

        combo_caret {
            bindings = <&kp CARET>;
            key-positions = <14 15>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };

        combo_ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <15 16>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };

        combo_star {
            bindings = <&kp ASTERISK>;
            key-positions = <17 16>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };

        combo_left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <7 8>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };

        combo_right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 9>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };

        combo_left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <19 20>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };

        combo_right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <20 21>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };

        combo_left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };

        combo_right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 33>;
            require-prior-idle-ms = <150>;
            layers = <0>;
        };

        combo_swe_ao {
            bindings = <&kp RA(W)>;
            key-positions = <10 9>;
            layers = <0>;
        };

        combo_swe_ae {
            bindings = <&kp RA(A)>;
            key-positions = <34 33>;
            layers = <0>;
        };

        combo_swe_o {
            bindings = <&kp RA(O)>;
            key-positions = <22 21>;
            layers = <0>;
        };

        combo_num_1 {
            bindings = <&kp N1>;
            key-positions = <1 13>;
            layers = <0>;
        };

        combo_num_2 {
            bindings = <&kp N2>;
            key-positions = <2 14>;
            layers = <0>;
        };

        combo_num_3 {
            bindings = <&kp N3>;
            key-positions = <3 15>;
            layers = <0>;
        };

        combo_num_4 {
            bindings = <&kp N4>;
            key-positions = <16 4>;
            layers = <0>;
        };

        combo_num_5 {
            bindings = <&kp N5>;
            key-positions = <5 17>;
            layers = <0>;
        };

        combo_num_6 {
            bindings = <&kp N6>;
            key-positions = <6 18>;
            layers = <0>;
        };

        combo_num_7 {
            bindings = <&kp N7>;
            key-positions = <7 19>;
            layers = <0>;
        };

        combo_num_8 {
            bindings = <&kp N8>;
            key-positions = <8 20>;
            layers = <0>;
        };

        combo_num_9 {
            bindings = <&kp N9>;
            key-positions = <21 9>;
            layers = <0>;
        };

        combo_num_0 {
            bindings = <&kp N0>;
            key-positions = <10 22>;
            layers = <0>;
        };

        combo_gaming_num_1 {
            bindings = <&kp N1>;
            key-positions = <36 1>;
            layers = <4>;
        };

        combo_gaming_num_2 {
            bindings = <&kp N2>;
            key-positions = <36 2>;
            layers = <4>;
        };

        combo_gaming_num_3 {
            bindings = <&kp N3>;
            key-positions = <36 3>;
            layers = <4>;
        };

        combo_gaming_num_4 {
            bindings = <&kp N4>;
            key-positions = <36 4>;
            layers = <4>;
        };

        combo_gaming_num_5 {
            bindings = <&kp N5>;
            key-positions = <36 5>;
            layers = <4>;
        };

        combo_gaming_num_6 {
            bindings = <&kp N6>;
            key-positions = <36 25>;
            layers = <4>;
        };

        combo_gaming_num_7 {
            bindings = <&kp N7>;
            key-positions = <36 26>;
            layers = <4>;
        };

        combo_gaming_num_8 {
            bindings = <&kp N8>;
            key-positions = <36 27>;
            layers = <4>;
        };

        combo_gaming_num_9 {
            bindings = <&kp N9>;
            key-positions = <36 28>;
            layers = <4>;
        };

        combo_gaming_num_0 {
            bindings = <&kp N0>;
            key-positions = <36 29>;
            layers = <4>;
        };
    };

    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 36 37 38 39 40 41 7 8 9 10 11 19 20 21 22 23 31 32 33 34 35 41 18 30>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 39 40 41 41 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };

        smart_shift: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHIFT";
            bindings = <&sk RIGHT_SHIFT>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        hmli: homerow_mods_left_instant {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_INSTANT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 36 37 38 39 40 41 7 8 9 10 11 19 20 21 22 23 31 32 33 34 35 41 18 30>;
        };

        hmri: homerow_mods_right_instant {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_INSTANT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 39 40 41 41 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";
            bindings = <
&kp ESC        &kp Q    &kp W        &kp E         &kp R        &kp T        &kp Y          &kp U        &kp I         &kp O        &kp P          &kp MINUS
&kp BACKSLASH  &kp A    &hml LCMD S  &hml LCTRL D  &hml LALT F  &kp G        &kp H          &hmr RALT J  &hmr RCTRL K  &hmr RCMD L  &kp SEMICOLON  &kp SQT
&kp GRAVE      &lt 3 Z  &kp X        &kp C         &kp V        &kp B        &kp N          &kp M        &kp COMMA     &kp DOT      &kp FSLH       &kp EQUAL
                                     &kp LSHIFT    &lt 2 TAB    &kp ENTER    &kp BACKSPACE  &lt 1 SPACE  &kp RSHIFT
            >;
        };

        system {
            display-name = "system";
            bindings = <
&none  &kp F1  &kp F2   &kp F3        &kp F4        &none         &kp LC(UP)    &kp LC(LEFT)  &kp UP        &kp LC(RIGHT)  &none  &none
&none  &kp F5  &kp F6   &kp F7        &kp F8        &none         &kp LC(DOWN)  &kp LEFT      &kp DOWN      &kp RIGHT      &none  &none
&none  &kp F9  &kp F10  &kp F11       &kp F12       &none         &none         &none         &none         &none          &none  &none
                        &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE    &bt BT_SEL 0  &trans        &bt BT_SEL 1
            >;
        };

        numpad {
            display-name = "numpad";
            bindings = <
&none  &none  &none  &none   &none  &none    &kp COLON      &kp N7  &kp N8     &kp N9  &none      &kp MINUS
&none  &none  &none  &none   &none  &none    &kp STAR       &kp N4  &kp N5     &kp N6  &kp DOT    &kp COMMA
&none  &none  &none  &none   &none  &none    &kp PLUS       &kp N1  &kp N2     &kp N3  &kp SLASH  &kp EQUAL
                     &trans  &none  &none    &kp BACKSPACE  &kp N0  &kp SPACE
            >;
        };

        mouse {
            display-name = "mouse";
            bindings = <
&none  &none  &none           &msc SCRL_UP    &none            &none    &none     &none           &mmv MOVE_UP    &none            &none     &none
&none  &none  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &none    &none     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB4  &none
&none  &none  &none           &none           &none            &none    &none     &none           &none           &none            &mkp MB5  &none
                              &none           &trans           &none    &mkp MB1  &mkp MB2        &mkp MB3
            >;
        };

        gaming {
            display-name = "gaming";
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E    &kp R      &kp T        &kp Y     &kp U        &kp I          &kp O    &kp P          &kp MINUS
&kp LSHFT  &kp A  &kp S  &kp D    &kp F      &kp G        &kp H     &kp J        &kp K          &kp L    &kp SEMICOLON  &kp APOS
&kp LCTRL  &kp Z  &kp X  &kp C    &kp V      &kp B        &kp N     &kp M        &kp COMMA      &kp DOT  &kp FSLH       &kp EQUAL
                         &kp TAB  &kp SPACE  &kp ENTER    &kp BSPC  &lt 1 SPACE  &mt RALT RCMD
            >;
        };
    };
};
